class Vector2D:

    def __init__(self, v: List[List[int]]):
        self.row, self.col, self.v = 0, 0, v

    def next(self) -> int:
        while self.row < len(self.v):
            while self.col < len(self.v[self.row]):
                result = self.v[self.row][self.col]
                self.col += 1
                return result
            self.col = 0
            self.row += 1

    def hasNext(self) -> bool:
        while self.row < len(self.v):
            if self.col < len(self.v[self.row]):
                return True
            self.col = 0
            self.row += 1
        return False

# Your Vector2D object will be instantiated and called as such:
# obj = Vector2D(v)
# param_1 = obj.next()
# param_2 = obj.hasNext()



class Vector2D {

    int row, col;
    int [][] vec;
    
    public Vector2D(int[][] v) {
        row = 0;
        col = 0;
        vec = v;
    }
    
    public int next() {
        while (row < vec.length){
            while (col < vec[row].length){
                int result = vec[row][col];
                col += 1;
                return result;
            }
            col = 0;
            row += 1;
        }
        return -1;
    }
    
    public boolean hasNext() {
        while (row < vec.length){
            while (col < vec[row].length){
                return true;
            }
            col = 0;
            row += 1;
        }
        return false;
    }
}

/**
 * Your Vector2D object will be instantiated and called as such:
 * Vector2D obj = new Vector2D(v);
 * int param_1 = obj.next();
 * boolean param_2 = obj.hasNext();
 */