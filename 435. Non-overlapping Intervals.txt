import heapq

class Solution:
    def eraseOverlapIntervals(self, intervals: List[List[int]]) -> int:
        
        # By start
        end = -float('inf')
        erase = 0
        
        def func(x):
            return x[0]
        intervals.sort(key = func)
        
        for i in range(len(intervals)):
            if intervals[i][0] >= end:
                end = intervals[i][1]
            else:
                erase += 1
                end = min(end, intervals[i][1])
        return erase
        
        # By end
        end = -float('inf')
        erase = 0
        
        def func(x):
            return x[1]
        intervals.sort(key = func)
        
        for i in range(len(intervals)):
            if intervals[i][0] >= end:
                end = intervals[i][1]
            else:
                erase += 1
        return erase