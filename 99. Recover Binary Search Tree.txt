# Definition for a binary tree node.
# class TreeNode:
#     def __init__(self, x):
#         self.val = x
#         self.left = None
#         self.right = None

class Solution:
    def recoverTree(self, root: TreeNode) -> None:
        """
        Do not return anything, modify root in-place instead.
        """
        self.first, self.second, self.prev = None, None, TreeNode(-float('inf'))
        
        def inord(node):
            if node:
                inord(node.left)
                
                if self.first==None and self.prev.val >= node.val:
                    self.first = self.prev
                    
                if self.first and self.prev.val >= node.val:
                    self.second = node
                
                self.prev = node
                
                inord(node.right)
                
        inord(root)
        temp = self.first.val
        self.first.val = self.second.val
        self.second.val = temp
        