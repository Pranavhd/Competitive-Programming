class Solution {
    public int[][] spiralMatrixIII(int R, int C, int r0, int c0) {
        int[][] direcs = new int[][]{{0, 1}, {1, 0}, {0, -1}, {-1, 0}};
        int d = 0, len = 0;
        int count = 0;
        List<int[]> res = new ArrayList<int[]>();
        res.add(new int[]{r0, c0});
        int oldr = r0, oldc = c0;
        while (res.size() < R*C){
            if (d == 0 || d == 2)
                len += 1;
            
            for(int j = 0; j < len; j ++){
                r0 += direcs[d][0];
                c0 += direcs[d][1];
                if ( 0<= r0 && r0 < R && 0<= c0 && c0 < C ){
                    res.add(new int[]{r0, c0});
                    count += 1;
                }
            }
            
            d = (d + 1)% 4;
            
        }
        return res.toArray(new int[R*C][2]);
    }
}