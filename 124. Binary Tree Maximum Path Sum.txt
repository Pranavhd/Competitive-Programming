# Definition for a binary tree node.
# class TreeNode:
#     def __init__(self, x):
#         self.val = x
#         self.left = None
#         self.right = None

'''
O(n) - space and time
inorder
kadane's algorithm
'''

class Solution:
    def maxPathSum(self, root: TreeNode) -> int:
        self.maxval = -float('inf')
        
        def dfs(node):
            if not node:
                return 0
            left = max(0, dfs(node.left))
            right = max(0, dfs(node.right))
            self.maxval = max(node.val + left + right, self.maxval)
            return max(left, right) + node.val
        
        dfs(root)
        return self.maxval