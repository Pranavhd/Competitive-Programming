import heapq

class MaxStack(object):

    def __init__(self):
        """
        initialize your data structure here.
        """
        self.stack = []

    def push(self, x):
        """
        :type x: int
        :rtype: None
        """
        if not self.stack:
            self.stack.append((x,x))
        else:
            self.stack.append((x, max(x, self.stack[-1][1])))

    def pop(self):
        """
        :rtype: int
        """
        return self.stack.pop()[0]

    def top(self):
        """
        :rtype: int
        """
        return self.stack[-1][0]

    def peekMax(self):
        """
        :rtype: int
        """
        return self.stack[-1][1]

    def popMax(self):
        """
        :rtype: int
        """
        maxi = self.stack[-1][1]
        temp = []
        while self.stack[-1][0] != maxi:
            temp.append(self.stack.pop()[0])
        ele = self.stack.pop()[0]
        while temp:
            push_back = temp.pop()
            self.push(push_back)
        return ele


# Your MaxStack object will be instantiated and called as such:
# obj = MaxStack()
# obj.push(x)
# param_2 = obj.pop()
# param_3 = obj.top()
# param_4 = obj.peekMax()
# param_5 = obj.popMax()