class Solution:
    def maximumProduct(self, nums: List[int]) -> int:
        k = 3
        
        nums.sort()
        len_, product = len(nums), 1
        
        if nums[len_-1] == 0 and k&1:
            return 0
        if nums[len_-1] <= 0 and k&1:
            for i in range(len_ - 1, len_ - 1  - k, -1):
                product *= nums[i]
            return product
        
        i, j = 0, len_ - 1
        
        if k&1:
            product *= nums[j]
            j -= 1
            k -= 1
            
        k >>= 1
        
        #print(product)
        for i in range(k):
            if nums[i] * nums[i+1] > nums[j]*nums[j-1]:
                product *= nums[i] * nums[i+1]
                i += 2
            else:
                product *= nums[j]*nums[j-1]
                j -= 2
        return product
                
'''
maximum product = 2 negative 1 positive
or 3 positive

keep track 2 vars, max negative, max positive and max number

5 vars => neg max, neg max2, max, max2, max3
ans = max(n_max*n_max2*max3, max*max2*max3)

min1, min2, max3, max2, max1  = nums[0]

for ele in nums:
if ele < min1:
 min2 = min1
 min1 = ele
elif ele < min2:
 min2 = ele
elif ele > max1:
 max3 = max2
 max2 = max1
 max1 = ele
elif ele > max2:
 max3 = max2
 max2 = ele
elif ele > max3:
 max3 = ele
'''