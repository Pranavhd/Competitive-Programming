class Solution(object):
    def minWindow(self, S,T):
        """
        :type s: str
        :type t: str
        :rtype: str
        """
        
        d_t = {}
        d_s = {}
        for t in T:
            d_t[t] = d_t.get(t, 0) + 1

        l, r, formed, mini = 0, 0, 0, float('inf')
        word = ""

        while r<len(S):
            ele = S[r]
            d_s[ele] = d_s.get(ele,0) + 1
            if ele in d_t and d_s[ele] == d_t[ele]:
                formed += 1

            while formed == len(d_t) and l<=r:
                if r-l+1< mini:
                    mini = min(r-l+1, mini)
                    word = S[l:r+1]
                d_s[S[l]] -= 1
                if S[l] in d_t and d_s[S[l]] < d_t[S[l]]:
                    formed -= 1
                l += 1
            r += 1

        return word