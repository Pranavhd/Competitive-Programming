class RandomizedCollection(object):

    def __init__(self):
        """
        Initialize your data structure here.
        """
        self.list, self.dict = [], {} 

    def insert(self, val):
        """
        Inserts a value to the collection. Returns true if the collection did not already contain the specified element.
        :type val: int
        :rtype: bool
        """
        self.list.append(val)
        self.dict[val] = self.dict.get(val, set())
        self.dict[val].add(len(self.list) - 1)
        return len(self.dict[val]) == 1

    def remove(self, val):
        """
        Removes a value from the collection. Returns true if the collection contained the specified element.
        :type val: int
        :rtype: bool
        """
        
        if val not in self.dict:
            return False
        
        pos_end = len(self.list) - 1
        pos_val = self.dict[val].pop()
        ele_end = self.list[pos_end]
        self.dict[ele_end].add(pos_val)
        self.dict[ele_end].discard(len(self.list)-1)
        
        if not self.dict[val]:
            del self.dict[val]
        
        self.list[pos_val] = ele_end
        self.list.pop()
        return True

    def getRandom(self):
        """
        Get a random element from the collection.
        :rtype: int
        """
        return self.list[random.randrange(len(self.list))]


# Your RandomizedCollection object will be instantiated and called as such:
# obj = RandomizedCollection()
# param_1 = obj.insert(val)
# param_2 = obj.remove(val)
# param_3 = obj.getRandom()