#https://leetcode.com/problems/word-search/description/

class Solution:
    def matchind(self,x,y,word,index,rows,cols,board):
        if index==len(word):
            return True
        if (y<0 or x<0 or y == cols or x == rows):
            return False
        if board[x][y] != word[index]:
            return False
        board[x][y] += 'A'
        #print(board[x][y])
        i = index
        ans = self.matchind(x+1, y, word, i+1, rows, cols, board) or self.matchind(x-1, y, word, i+1, rows, cols, board) or self.matchind(x, y+1, word, i+1, rows, cols, board) or self.matchind(x, y-1, word, i+1, rows, cols, board)
        board[x][y] = board[x][y][0]
        return ans

    def exist(self,board, word):
        rows = len(board)
        cols = len(board[0])

        #print(word)
        for i in range(rows):
            for j in range(cols):
                if self.matchind(i,j,word,0,rows,cols,board):
                    #print(board)
                    return True

        return False

    #board = [['A','B','C','E'],['S','F','C','S'],['A','D','E','E']]
    #print(exist(board,"ABFCS"))