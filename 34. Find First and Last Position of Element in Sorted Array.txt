#https://leetcode.com/problems/find-first-and-last-position-of-element-in-sorted-array/description/

class Solution:
    def searchRange(self, nums, target):
        """
        :type nums: List[int]
        :type target: int
        :rtype: List[int]
        """
        if nums == []:
            return [-1,-1]
        
        def bin(low,high,target,left):
            while high>low:
                mid =  (high + low)//2
                if target<nums[mid] or (left==True and target==nums[mid]):
                    high = mid
                else:
                    low = mid + 1
            return low
        
        left = bin(0,len(nums),target,True)
        
        if left==len(nums) or nums[left]!=target:
            return [-1,-1]
        
        right = bin(0,len(nums),target,False) - 1
        
        return [left,right]