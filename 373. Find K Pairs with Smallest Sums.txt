import heapq

class Solution(object):
    def kSmallestPairs(self, nums1, nums2, k):
        """
        :type nums1: List[int]
        :type nums2: List[int]
        :type k: int
        :rtype: List[List[int]]
        """
        queue = []
        ans = []
        visited = set()
        
        def push(i,j):
            if i < len(nums1) and j < len(nums2):
                heapq.heappush(queue, (nums1[i] + nums2[j], i, j))
                
        push(0,0)
        visited.add((0,0))
        
        while queue and len(ans) < k:
            _, i, j = heapq.heappop(queue)
            ans.append([nums1[i], nums2[j]])
            if (i+1,j) not in visited:
                push(i+1,j)
                visited.add((i+1,j))
            if (i,j+1) not in visited:
                push(i,j+1)
                visited.add((i,j+1))
                
        return ans