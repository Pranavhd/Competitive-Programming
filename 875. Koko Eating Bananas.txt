class Solution:
    def minEatingSpeed(self, piles: List[int], H: int) -> int:
        def possible(k):
            return sum(1 + (p-1)//k for p in piles) <= H
        
        lo, hi = 1, max(piles)
        
        while lo < hi:
            mi = (lo + hi)//2
            if not possible(mi):
                lo = mi + 1
            else:
                hi = mi
        return lo