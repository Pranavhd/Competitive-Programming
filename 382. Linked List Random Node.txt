import random
# Definition for singly-linked list.
# class ListNode(object):
#     def __init__(self, x):
#         self.val = x
#         self.next = None

class Solution(object):

    def __init__(self, head):
        """
        @param head The linked list's head.
        Note that the head is guaranteed to be not null, so it contains at least one node.
        :type head: ListNode
        """
        self.count = 0
        self.perm = head
        curr = head
        while curr:
            curr = curr.next
            self.count += 1

    def getRandom(self):
        """
        Returns a random node's value.
        :rtype: int
        """
        val = random.randrange(self.count)
        i = 0
        head = self.perm
        while i<val:
            head = head.next
            i += 1
        return head.val


# Your Solution object will be instantiated and called as such:
# obj = Solution(head)
# param_1 = obj.getRandom()