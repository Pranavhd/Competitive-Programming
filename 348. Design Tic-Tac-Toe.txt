class TicTacToe(object):

    def __init__(self, n):
        """
        Initialize your data structure here.
        :type n: int
        """
        #self.matrix = [[0 for i in range(n)] for i in range(n)]
        self.row_sum = [0 for i in range(n)]
        self.col_sum = [0 for i in range(n)]
        self.n = n
        self.tb = 0
        self.lr = 0

    def move(self, row, col, player):
        """
        Player {player} makes a move at ({row}, {col}).
        @param row The row of the board.
        @param col The column of the board.
        @param player The player, can be either 1 or 2.
        @return The current winning condition, can be either:
                0: No one wins.
                1: Player 1 wins.
                2: Player 2 wins.
        :type row: int
        :type col: int
        :type player: int
        :rtype: int
        """
        if player & 1:
            self.row_sum[row] += 1
            self.col_sum[col] += 1
            if row == col:
                self.tb += 1
            if row + col == self.n - 1:
                self.lr += 1
        else:
            self.row_sum[row] -= 1
            self.col_sum[col] -= 1
            if row == col:
                self.tb -= 1
            if row + col == self.n - 1:
                self.lr -= 1
        
        if self.row_sum[row] == self.n or self.col_sum[col] == self.n or self.tb == self.n or self.lr == self.n:
            return 1
        elif self.row_sum[row] == -self.n or self.col_sum[col] == -self.n or self.tb == -self.n or self.lr == -self.n:
            return 2
        else:
            return 0


# Your TicTacToe object will be instantiated and called as such:
# obj = TicTacToe(n)
# param_1 = obj.move(row,col,player)

'''
create 2d array 0,0 -> n-1, n-1

if mve is odd : increase value by 1 else decrease by 1

curr_row_sum[i] = 0
curr_col_sum[i] = 0

if after move, curr_row_sum[x] == n or -n
same for col
'''